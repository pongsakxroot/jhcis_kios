#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Quick Test Script for ZeroTier and Database
"""

import subprocess
import socket
import json
import sys

def check_zerotier():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ZeroTier"""
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ZeroTier...")
    
    try:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ zerotier-cli ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        result = subprocess.run(['which', 'zerotier-cli'], 
                               capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ ZeroTier ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            try:
                result = subprocess.run(['sudo', 'zerotier-cli', 'info'], 
                                      capture_output=True, text=True, timeout=10)
                if result.returncode == 0:
                    print(f"üìä ZeroTier Info: {result.stdout.strip()}")
                    
                    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö networks
                    result = subprocess.run(['sudo', 'zerotier-cli', 'listnetworks'], 
                                          capture_output=True, text=True, timeout=10)
                    if result.returncode == 0:
                        print(f"üìã Networks: {result.stdout.strip()}")
                        
                        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ join network ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                        if '60ee7c034ac1fafa' in result.stdout:
                            print("‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô network 60ee7c034ac1fafa ‡πÅ‡∏•‡πâ‡∏ß")
                            return True
                        else:
                            print("‚ö†Ô∏è  ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ join network 60ee7c034ac1fafa")
                            return False
                else:
                    print("‚ùå ZeroTier service ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
                    return False
            except subprocess.TimeoutExpired:
                print("‚è∞ ZeroTier command timeout")
                return False
                
        else:
            print("‚ùå ZeroTier ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á")
            return False
            
    except Exception as e:
        print(f"‚ùå Error checking ZeroTier: {e}")
        return False

def check_network_connectivity():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ network"""
    print("\nüåê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ network...")
    
    host = "192.168.9.101"
    port = 3306
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ping
    try:
        result = subprocess.run(['ping', '-c', '3', '-W', '5', host], 
                               capture_output=True, text=True, timeout=20)
        if result.returncode == 0:
            print(f"‚úÖ Ping {host} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            ping_success = True
        else:
            print(f"‚ùå Ping {host} ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
            ping_success = False
    except subprocess.TimeoutExpired:
        print(f"‚è∞ Ping {host} timeout")
        ping_success = False
    except Exception as e:
        print(f"‚ùå Ping error: {e}")
        ping_success = False
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö port
    print(f"üîå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö port {port}...")
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex((host, port))
        sock.close()
        
        if result == 0:
            print(f"‚úÖ Port {port} ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
            port_success = True
        else:
            print(f"‚ùå Port {port} ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ")
            port_success = False
    except Exception as e:
        print(f"‚ùå Port test error: {e}")
        port_success = False
    
    return ping_success and port_success

def check_database_connection():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    print("\nüóÑÔ∏è  ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
    
    try:
        import mysql.connector
        
        # ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        try:
            with open('db_config.json', 'r', encoding='utf-8') as f:
                config = json.load(f)
        except FileNotFoundError:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå db_config.json")
            return False
        
        print(f"üì° ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á {config['host']}:{config['port']}")
        print(f"üë§ User: {config['user']}")
        print(f"üóÑÔ∏è  Database: {config['database']}")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        conn = mysql.connector.connect(**config)
        cursor = conn.cursor()
        
        cursor.execute("SELECT VERSION()")
        version = cursor.fetchone()
        print(f"‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! MySQL Version: {version[0]}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        cursor.execute("SHOW TABLES")
        tables = cursor.fetchall()
        table_count = len(tables)
        print(f"üìã ‡∏û‡∏ö {table_count} ‡∏ï‡∏≤‡∏£‡∏≤‡∏á")
        
        cursor.close()
        conn.close()
        
        return True
        
    except ImportError:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö mysql.connector ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á: pip install mysql-connector-python")
        return False
    except Exception as e:
        print(f"‚ùå Database connection error: {e}")
        return False

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ Quick Test - ZeroTier & Database Connectivity")
    print("=" * 50)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ZeroTier
    zerotier_ok = check_zerotier()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö network
    network_ok = check_network_connectivity()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    database_ok = check_database_connection()
    
    # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    print("\n" + "=" * 50)
    print("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print(f"ZeroTier: {'‚úÖ' if zerotier_ok else '‚ùå'}")
    print(f"Network: {'‚úÖ' if network_ok else '‚ùå'}")
    print(f"Database: {'‚úÖ' if database_ok else '‚ùå'}")
    
    if zerotier_ok and network_ok and database_ok:
        print("\nüéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
        print("üöÄ ‡∏£‡∏±‡∏ô Flask app: python3 app.py")
    else:
        print("\n‚ùå ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
        
        if not zerotier_ok:
            print("1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ZeroTier: curl -s https://install.zerotier.com | sudo bash")
            print("2. Join network: sudo zerotier-cli join 60ee7c034ac1fafa")
        
        if not network_ok:
            print("3. ‡∏£‡∏≠ admin ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏ô ZeroTier Central")
            print("4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö firewall ‡πÅ‡∏•‡∏∞ network settings")
        
        if not database_ok:
            print("5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö username/password ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
            print("6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö MySQL server settings")

if __name__ == "__main__":
    main()
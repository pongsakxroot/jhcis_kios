#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
MySQL Setup Script
‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• jhcis
"""

import subprocess
import mysql.connector
import json
import sys
import time

def setup_mysql_auth():
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ authentication ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MySQL"""
    print("üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL authentication...")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå SQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
    sql_commands = """
-- ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏ö‡∏ö native password
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
FLUSH PRIVILEGES;

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• jhcis
CREATE DATABASE IF NOT EXISTS jhcis CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
USE jhcis;

-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á person (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
CREATE TABLE IF NOT EXISTS person (
    pid VARCHAR(20) PRIMARY KEY,
    hn VARCHAR(20),
    idcard VARCHAR(13),
    fname VARCHAR(100),
    lname VARCHAR(100),
    mobile VARCHAR(20),
    pcucodeperson VARCHAR(10),
    rightno VARCHAR(50)
);

-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á visit (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö NHSO)
CREATE TABLE IF NOT EXISTS visit (
    visitno INT PRIMARY KEY AUTO_INCREMENT,
    pid VARCHAR(20),
    visitdate DATE,
    timestart TIME,
    timeend TIME,
    pcucode VARCHAR(10),
    pcucodeperson VARCHAR(10),
    rightcode VARCHAR(10),
    timeservice VARCHAR(10),
    flagservice VARCHAR(10),
    typein VARCHAR(10),
    servicetype VARCHAR(10),
    qdiscloser VARCHAR(10),
    rightno VARCHAR(50),
    hiciauthen_nhso VARCHAR(50),
    dateupdate DATETIME,
    claimcode_nhso VARCHAR(50),
    datetime_claim DATETIME,
    correlationid_nhso VARCHAR(100),
    FOREIGN KEY (pid) REFERENCES person(pid)
);

-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á chospital (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•)
CREATE TABLE IF NOT EXISTS chospital (
    hosname VARCHAR(200),
    address VARCHAR(200),
    tel VARCHAR(50),
    provname VARCHAR(100)
);

-- ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
INSERT IGNORE INTO chospital (hosname, address, tel, provname) VALUES
('‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '02-123-4567', '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£');

-- ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
INSERT IGNORE INTO person (pid, hn, idcard, fname, lname, mobile, pcucodeperson, rightno) VALUES
('P001', 'HN001', '1111111111119', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '‡∏£‡∏∞‡∏ö‡∏ö', '0812345678', 'PCU001', 'RIGHT001');
"""
    
    try:
        # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå SQL
        with open('/tmp/setup.sql', 'w', encoding='utf-8') as f:
            f.write(sql_commands)
        
        # ‡∏£‡∏±‡∏ô MySQL script
        result = subprocess.run([
            'sudo', 'mysql', '-u', 'root', '<', '/tmp/setup.sql'
        ], shell=True, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            return True
        else:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

def test_connection():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
    print("\nüß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠...")
    
    configs = [
        {
            'host': 'localhost',
            'user': 'root',
            'password': '',
            'database': 'jhcis',
            'port': 3306
        },
        {
            'host': '127.0.0.1',
            'user': 'root',
            'password': '',
            'database': 'jhcis',
            'port': 3306
        }
    ]
    
    for i, config in enumerate(configs):
        try:
            print(f"\n--- ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ {i+1} ---")
            print(f"Host: {config['host']}")
            print(f"Database: {config['database']}")
            
            conn = mysql.connector.connect(**config)
            cursor = conn.cursor()
            
            # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö query
            cursor.execute("SELECT COUNT(*) FROM person")
            person_count = cursor.fetchone()[0]
            print(f"‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô person: {person_count}")
            
            cursor.execute("SELECT COUNT(*) FROM visit")
            visit_count = cursor.fetchone()[0]
            print(f"‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô visit: {visit_count}")
            
            cursor.close()
            conn.close()
            
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
            with open('db_config.json', 'w', encoding='utf-8') as f:
                json.dump(config, f, ensure_ascii=False, indent=2)
            print("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå db_config.json ‡πÅ‡∏•‡πâ‡∏ß")
            
            return True
            
        except mysql.connector.Error as err:
            print(f"‚ùå MySQL Error: {err}")
        except Exception as e:
            print(f"‚ùå Error: {e}")
    
    return False

def setup_mysql_alternative():
    """‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"""
    print("\nüîÑ ‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å...")
    
    try:
        # ‡πÉ‡∏ä‡πâ mysql_secure_installation ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà interactive
        commands = [
            "sudo mysql -e \"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';\"",
            "sudo mysql -e \"FLUSH PRIVILEGES;\"",
            "sudo mysql -e \"CREATE DATABASE IF NOT EXISTS jhcis CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\"",
            "sudo mysql jhcis -e \"CREATE TABLE IF NOT EXISTS person (pid VARCHAR(20) PRIMARY KEY, hn VARCHAR(20), idcard VARCHAR(13), fname VARCHAR(100), lname VARCHAR(100), mobile VARCHAR(20), pcucodeperson VARCHAR(10), rightno VARCHAR(50));\"",
            "sudo mysql jhcis -e \"CREATE TABLE IF NOT EXISTS visit (visitno INT PRIMARY KEY AUTO_INCREMENT, pid VARCHAR(20), visitdate DATE, timestart TIME, timeend TIME, pcucode VARCHAR(10), pcucodeperson VARCHAR(10), rightcode VARCHAR(10), timeservice VARCHAR(10), flagservice VARCHAR(10), typein VARCHAR(10), servicetype VARCHAR(10), qdiscloser VARCHAR(10), rightno VARCHAR(50), hiciauthen_nhso VARCHAR(50), dateupdate DATETIME, claimcode_nhso VARCHAR(50), datetime_claim DATETIME, correlationid_nhso VARCHAR(100));\"",
            "sudo mysql jhcis -e \"CREATE TABLE IF NOT EXISTS chospital (hosname VARCHAR(200), address VARCHAR(200), tel VARCHAR(50), provname VARCHAR(100));\"",
            "sudo mysql jhcis -e \"INSERT IGNORE INTO chospital (hosname, address, tel, provname) VALUES ('‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '123 ‡∏ñ‡∏ô‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '02-123-4567', '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£');\"",
            "sudo mysql jhcis -e \"INSERT IGNORE INTO person (pid, hn, idcard, fname, lname, mobile, pcucodeperson, rightno) VALUES ('P001', 'HN001', '1111111111119', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '‡∏£‡∏∞‡∏ö‡∏ö', '0812345678', 'PCU001', 'RIGHT001');\""
        ]
        
        for cmd in commands:
            print(f"‡∏£‡∏±‡∏ô: {cmd}")
            result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
            if result.returncode != 0:
                print(f"‚ùå Error: {result.stderr}")
                return False
            else:
                print("‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö JHCIS")
    print("=" * 50)
    
    # ‡∏£‡∏≠‡πÉ‡∏´‡πâ MySQL ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
    print("‚è≥ ‡∏£‡∏≠ MySQL ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...")
    time.sleep(5)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ MySQL ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    try:
        result = subprocess.run(['pgrep', 'mysql'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ MySQL ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        else:
            print("‚ùå MySQL ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏° MySQL ‡∏Å‡πà‡∏≠‡∏ô")
            return
    except:
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ MySQL ‡πÑ‡∏î‡πâ")
    
    # ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if setup_mysql_alternative():
        print("\n‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        if test_connection():
            print("\nüéâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
            print("\n‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô Flask app ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß:")
            print("python3 app.py")
        else:
            print("\n‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
    else:
        print("\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MySQL ‡πÑ‡∏î‡πâ")
    
    print("\nüìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:")
    print("- ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏•‡∏≠‡∏á‡∏£‡∏±‡∏ô: sudo mysql_secure_installation")
    print("- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: /var/log/mysql/error.log")

if __name__ == "__main__":
    main()